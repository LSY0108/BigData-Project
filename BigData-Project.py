# -*- coding: utf-8 -*-
"""202244035_이승예.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1U6dz34o_PauFGB3CGiqEHDMQjr_FOrP0
"""

import pandas as pd

# 데이터를 DataFrame으로 읽기
df = pd.read_excel('/content/시군별_논벼_생산량.xlsx')

# 첫 두 행을 확인하여 올바른 데이터 구조 파악
print("Initial columns:", df.columns.tolist())
print("First row:", df.iloc[0].tolist())

# 실제 데이터 구조에 맞게 처리
# 두 번째 행을 새로운 열 이름으로 사용
new_columns = []
for col in df.iloc[1]:
    if pd.isna(col):
        new_columns.append('temp')  # 임시 이름 부여
    else:
        new_columns.append(str(col))
df.columns = new_columns

# 첫 두 행 제거 (이미 열 이름으로 사용했으므로)
df = df.iloc[2:].reset_index(drop=True)

# 빈 리스트 생성
processed_data = []

# 각 행정구역별로 데이터 처리
for idx, row in df.iterrows():
    region = row.iloc[0]  # 첫 번째 열이 행정구역

    # 열 이름을 순회하면서 데이터 추출
    for i in range(0, len(row)-1, 2):  # 2칸씩 건너뛰며 처리
        if i+1 < len(row):  # 인덱스 범위 확인
            year = 2008 + (i//2)  # 연도 계산
            area = row.iloc[i]
            production = row.iloc[i+1]

            # 데이터 추가 (문자열 '-' 처리 포함)
            try:
                area_value = float(area) if pd.notnull(area) and str(area) != '-' else 0
                production_value = float(production) if pd.notnull(production) and str(production) != '-' else 0

                processed_data.append({
                    '행정구역': region,
                    '연도': year,
                    '재배면적(ha)': area_value,
                    '생산량(톤)': production_value
                })
            except ValueError:
                continue  # 숫자로 변환할 수 없는 경우 건너뛰기

# 새로운 DataFrame 생성
result_df = pd.DataFrame(processed_data)

# 데이터 정렬
result_df = result_df.sort_values(['행정구역', '연도']).reset_index(drop=True)

# 결과 확인
print("\n처리된 데이터 형태:")
print(result_df.head())
print("\n데이터 크기:", result_df.shape)

# 엑셀로 저장
result_df.to_excel('processed_rice_production.xlsx', index=False)

# 각 행정구역별 데이터 개수 확인
print("\n행정구역별 데이터 개수:")
print(result_df['행정구역'].value_counts())

df2 = pd.read_excel('/content/processed_rice_production.xlsx')
print(df2.head(120))